{
  "comments": [
    {
      "key": {
        "uuid": "a382fe16_aabeaf95",
        "filename": "common/Android.mk",
        "patchSetId": 1
      },
      "lineNbr": 152,
      "author": {
        "id": 1003723
      },
      "writtenOn": "2013-12-04T18:42:26Z",
      "side": 1,
      "message": "why is this needed? are apps now using the shared library version? it seems odd to hack up something to ignore errors if it isn\u0027t being used, rather than just exclude it from being reached.",
      "revId": "b44d38b05ff94cd9a5bbd224e2bb39693958302f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "63a3a6b3_44552e3b",
        "filename": "common/Android.mk",
        "patchSetId": 1
      },
      "lineNbr": 152,
      "author": {
        "id": 1003981
      },
      "writtenOn": "2013-12-04T19:02:40Z",
      "side": 1,
      "message": "Ideally we should use the conditional.\nBut we have to do this to fix the \"pseudo unbundled bulld\" in the platform source tree, e.g. the \"apps\" build target in master on the build page. Actually the build system doesn\u0027t prevent you from running tapas on an app (or a module) that\u0027s built against the platform. We use this feature to build a bundled app from the platform source tree so that we can release it to Play store before it\u0027s really unbundled.\nOn the other hand, if libcuuc is really used in an unbundled branch, the build will still fail due to the missing dependencies (e.g. libc).",
      "parentUuid": "a382fe16_aabeaf95",
      "revId": "b44d38b05ff94cd9a5bbd224e2bb39693958302f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "43a86290_8389ce5c",
        "filename": "common/Android.mk",
        "patchSetId": 1
      },
      "lineNbr": 152,
      "author": {
        "id": 1020814
      },
      "writtenOn": "2013-12-04T19:07:36Z",
      "side": 1,
      "message": "Brian: unbundled apps do not need this module and will never depend on it. However just the fact of having it in the makefile causes make in the unbundled branch to break unless projects superfluous to unbundled apps (abi/cpp and external/stlport) are included in the manifest. The ideal solution would be to have this stanza only evaluated when a target actually depends on it. But that\u0027s not possible with makefiles AFAIK.",
      "parentUuid": "63a3a6b3_44552e3b",
      "revId": "b44d38b05ff94cd9a5bbd224e2bb39693958302f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}